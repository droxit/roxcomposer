input {
  beats {
    port => 5001
  }
}

filter {
  json {
    source => "message"
    target => "json_message"
  }
  ruby {
    code => "event.get('json_message').each do |k, v| event.set(k, v) end"
  }
  ruby {
    code => "event.get('args').each do |k, v| event.set(k, v) end"
  }
  ruby {
    code => "event.set('time', event.get('time') * 1000)"
  }
  mutate {
    remove_field => [ "message", "args", "json_message" ]
    add_field => {
      "type" => "raw"
    }
  }

  clone {
    clones => [ "aggregated" ]
  }

  if [type] == "aggregated" {
    ruby {
      code => "event.set('start_time', event.get('time'))"
    }
    ruby {
      code => "event.set('last_update', event.get('time'))"
    }
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "trace-log"
      query => "_id:%{[message_id]}"
      fields => { "start_time" => "start_time" }
    }
  
    ruby {
      code => "event.set('processing_time', event.get('last_update') - event.get('start_time'))"
    }
  }
}

output {
  if [type] == "aggregated" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "trace-log"
      document_id => "%{[message_id]}"
    }
  } else {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "trace-log"
    }
  }
  stdout {
  }
}
